/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-21 06:32:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import java.net.*;
import com.fasterxml.jackson.databind.ObjectMapper;

public final class movieDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/movie/../logoutBar.jsp", Long.valueOf(1687322300036L));
    _jspx_dependants.put("/WEB-INF/views/movie/../header.jsp", Long.valueOf(1686797322589L));
    _jspx_dependants.put("/WEB-INF/views/movie/../footer.jsp", Long.valueOf(1687325975804L));
    _jspx_dependants.put("/WEB-INF/views/movie/../navi.jsp", Long.valueOf(1687321082701L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.fasterxml.jackson.databind.ObjectMapper");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("h2 {\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 소제목 스타일 */\r\n");
      out.write("h3 {\r\n");
      out.write("	color: #666666;\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin-bottom: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 일반 텍스트 스타일 */\r\n");
      out.write("p {\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-bottom: 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 리스트 스타일 */\r\n");
      out.write("ul {\r\n");
      out.write("	list-style-type: disc;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	margin-left: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 테이블 스타일 */\r\n");
      out.write("table {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("	padding: 6px;\r\n");
      out.write("	border: 1px solid #cccccc;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("	background-color: #f2f2f2;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 스탭 목록 스타일 */\r\n");
      out.write("ul.staff-list {\r\n");
      out.write("	list-style-type: none;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.staff-list li {\r\n");
      out.write("	margin-bottom: 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.staff-list li .role {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.staff-list li .name {\r\n");
      out.write("	margin-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#movieBox {\r\n");
      out.write("	width: 1024px;\r\n");
      out.write("	margin: 0 auto; /* 가로 중앙 정렬 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#posterImage {\r\n");
      out.write("	display: block;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".hidden {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".buttons-container {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".buttons-container button {\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	padding: 5px 10px;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("	color: #000000;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".buttons-container:after {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	bottom: -5px;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 1px;\r\n");
      out.write("	background-color: #000000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".active {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Movie Detail</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	function searchMovie(movieTitle) {\r\n");
      out.write("		var apiKey = \"e2a56aa6721d47327a92acc02bfbddf3\"; // 본인의 API 키로 대체해야 합니다.\r\n");
      out.write("		var movieNmEncoded = encodeURIComponent(movieTitle);\r\n");
      out.write("\r\n");
      out.write("		// 1. 영화 정보 조회\r\n");
      out.write("		var kobisUrl = \"https://kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json?key=f5eef3421c602c6cb7ea224104795888&movieNm=\"\r\n");
      out.write("				+ movieNmEncoded;\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : kobisUrl,\r\n");
      out.write("			type : \"GET\",\r\n");
      out.write("			success : function(response) {\r\n");
      out.write("				var movies = response.movieListResult.movieList;\r\n");
      out.write("				if (movies.length > 0) {\r\n");
      out.write("					var movie = findMovieByKoreanTitle(movies, movieTitle);\r\n");
      out.write("					if (movie) {\r\n");
      out.write("						var movieNmEn = movie.movieNmEn;\r\n");
      out.write("						// 2. 영화 정보로 검색\r\n");
      out.write("						searchMovieByEnglishTitle(movieNmEn, movieTitle);\r\n");
      out.write("						//console.log(rank + \" : \" + movieNmEn + \"(eng)\"); // 검색 방식 로그 출력\r\n");
      out.write("					} else {\r\n");
      out.write("						searchMovieByKoreanTitle(movieTitle);\r\n");
      out.write("						//console.log(rank + \" : \" + movieTitle); // 검색 방식 로그 출력\r\n");
      out.write("					}\r\n");
      out.write("				} else {\r\n");
      out.write("					searchMovieByKoreanTitle(movieTitle);\r\n");
      out.write("					//console.log(rank + \" : \" + movieTitle); // 검색 방식 로그 출력\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				searchMovieByKoreanTitle(movieTitle);\r\n");
      out.write("				//console.log(rank + \" : \" + movieTitle); // 검색 방식 로그 출력\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function findMovieByKoreanTitle(movies, movieTitle) {\r\n");
      out.write("		for (var i = 0; i < movies.length; i++) {\r\n");
      out.write("			var movie = movies[i];\r\n");
      out.write("			var title = movie.movieNm;\r\n");
      out.write("			if (title === movieTitle) {\r\n");
      out.write("				return movie;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		return null;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function searchMovieByEnglishTitle(movieTitle, movieNm) {\r\n");
      out.write("		var apiKey = \"e2a56aa6721d47327a92acc02bfbddf3\"; // 본인의 API 키로 대체해야 합니다.\r\n");
      out.write("		var encodedTitle = encodeURIComponent(movieTitle);\r\n");
      out.write("		var apiUrl = \"https://api.themoviedb.org/3/search/movie?api_key=\"\r\n");
      out.write("				+ apiKey + \"&query=\" + encodedTitle;\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : apiUrl,\r\n");
      out.write("			type : \"GET\",\r\n");
      out.write("			success : function(response) {\r\n");
      out.write("				var results = response.results;\r\n");
      out.write("				if (results.length > 0) {\r\n");
      out.write("					var movie = results[0];\r\n");
      out.write("					var posterPath = movie.poster_path;\r\n");
      out.write("					if (posterPath) {\r\n");
      out.write("						var posterUrl = \"https://image.tmdb.org/t/p/w500\"\r\n");
      out.write("								+ posterPath;\r\n");
      out.write("						$(\"#posterImage\").attr(\"src\", posterUrl); // 포스터 이미지 업데이트\r\n");
      out.write("					} else {\r\n");
      out.write("						searchMovieByKoreanTitle(movieNm);\r\n");
      out.write("					}\r\n");
      out.write("				} else {\r\n");
      out.write("					searchMovieByKoreanTitle(movieNm);\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				searchMovieByKoreanTitle(movieNm);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 3. 한국어로 다시 검색\r\n");
      out.write("	function searchMovieByKoreanTitle(movieTitle) {\r\n");
      out.write("		var apiKey = \"e2a56aa6721d47327a92acc02bfbddf3\"; // 본인의 API 키로 대체해야 합니다.\r\n");
      out.write("		var encodedTitle = encodeURIComponent(movieTitle);\r\n");
      out.write("		var apiUrl = \"https://api.themoviedb.org/3/search/movie?api_key=\"\r\n");
      out.write("				+ apiKey + \"&query=\" + encodedTitle;\r\n");
      out.write("\r\n");
      out.write("		$\r\n");
      out.write("				.ajax({\r\n");
      out.write("					url : apiUrl,\r\n");
      out.write("					type : \"GET\",\r\n");
      out.write("					success : function(response) {\r\n");
      out.write("						var results = response.results;\r\n");
      out.write("						if (results.length > 0) {\r\n");
      out.write("							var movie = results[0];\r\n");
      out.write("							var posterPath = movie.poster_path;\r\n");
      out.write("							var posterUrl = \"https://image.tmdb.org/t/p/w500\"\r\n");
      out.write("									+ posterPath;\r\n");
      out.write("							$(\"#posterImage\").attr(\"src\", posterUrl); // 포스터 이미지 업데이트\r\n");
      out.write("						} else {\r\n");
      out.write("							$(\"#posterImage\")\r\n");
      out.write("									.attr(\"src\",\r\n");
      out.write("											\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/errorPoster.png\"); // 검색 결과 없을 경우 이미지 초기화\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					error : function() {\r\n");
      out.write("						$(\"#posterImage\").attr(\"src\", \"\"); // 에러 발생 시 이미지 초기화\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	var activeButton = null;\r\n");
      out.write("\r\n");
      out.write("	// 페이지 로드 시 초기 설정\r\n");
      out.write("	window.onload = function() {\r\n");
      out.write("		var movieInfoButton = document.getElementById(\"movie-info-btn\");\r\n");
      out.write("		toggleSection(movieInfoButton, 'movie-info');\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function toggleSection(button, sectionId) {\r\n");
      out.write("		var sections = document.getElementsByClassName(\"movie-section\");\r\n");
      out.write("		for (var i = 0; i < sections.length; i++) {\r\n");
      out.write("			var section = sections[i];\r\n");
      out.write("			if (section.id === sectionId) {\r\n");
      out.write("				section.style.display = \"block\";\r\n");
      out.write("			} else {\r\n");
      out.write("				section.style.display = \"none\";\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		if (activeButton !== null) {\r\n");
      out.write("			activeButton.classList.remove(\"active\");\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		button.classList.add(\"active\");\r\n");
      out.write("		activeButton = button;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/commonStyles.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/naviStyles.css\">\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/favicon.ico\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	#logout-bar {\r\n");
      out.write("	    position: fixed;\r\n");
      out.write("	    top: 0;\r\n");
      out.write("	    left: 0;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    height: 30px;\r\n");
      out.write("	    background-color: #222222; /* 예시로 파란색 사용, 원하는 색상으로 변경해주세요 */\r\n");
      out.write("	    color: #ffffff; /* 텍스트 색상을 흰색으로 지정, 원하는 색상으로 변경해주세요 */\r\n");
      out.write("	    font-size: 12px; /* 텍스트 크기 조정, 원하는 크기로 변경해주세요 */\r\n");
      out.write("	    font-weight: bold; /* 텍스트 굵기 조정, 원하는 굵기로 변경해주세요 */\r\n");
      out.write("	    padding: 5px; /* 위 아래 여백을 조정, 원하는 여백으로 변경해주세요 */\r\n");
      out.write("	    box-sizing: border-box;\r\n");
      out.write("	}\r\n");
      out.write("	</style>\r\n");
      out.write("<!-- 로그인 바의 일부 -->\r\n");
      out.write("<div id=\"logout-bar\">\r\n");
      out.write("	<!-- 로그인 정보 표시 -->\r\n");
      out.write("	<span id=\"username\">사용자명</span>\r\n");
      out.write("	<!-- 로그아웃까지 남은 시간 표시 -->\r\n");
      out.write("	<span id=\"logout-timer\"></span>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 자바스크립트 -->\r\n");
      out.write("<script>\r\n");
      out.write("	// 로그아웃 시간(밀리초)\r\n");
      out.write("	var logoutTime = new Date().getTime() + 20 * 60 * 1000;\r\n");
      out.write("\r\n");
      out.write("	// 매 초마다 시간 갱신\r\n");
      out.write("	var timer = setInterval(function() {\r\n");
      out.write("		// 현재 시간\r\n");
      out.write("		var now = new Date().getTime();\r\n");
      out.write("\r\n");
      out.write("		// 남은 시간 계산\r\n");
      out.write("		var distance = logoutTime - now;\r\n");
      out.write("\r\n");
      out.write("		// 분과 초 계산\r\n");
      out.write("		var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n");
      out.write("		var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n");
      out.write("\r\n");
      out.write("		// 로그아웃까지 남은 시간 표시\r\n");
      out.write("		document.getElementById(\"logout-timer\").innerHTML = minutes + \"분 \"\r\n");
      out.write("				+ seconds + \"초\";\r\n");
      out.write("\r\n");
      out.write("		// 시간이 초과되면 로그아웃\r\n");
      out.write("		if (distance < 0) {\r\n");
      out.write("			clearInterval(timer);\r\n");
      out.write("			// 로그아웃 처리\r\n");
      out.write("			window.location.href = \"/logout\";\r\n");
      out.write("		}\r\n");
      out.write("	}, 1000);\r\n");
      out.write("</script>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<div id = \"header\">\r\n");
      out.write("		<img id=\"mainLogo\"\r\n");
      out.write("			src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/main logo.png\"\r\n");
      out.write("			alt=\"main logo\" width=\"너비\" height=\"높이\" />\r\n");
      out.write("	</div>\r\n");
      out.write("</header>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"topnav\">\r\n");
      out.write("			<a href=\"/board\">메인 화면</a>\r\n");
      out.write("			<a href=\"/Announcement\">공지 사항</a> \r\n");
      out.write("			<a href=\"/freeboard\">자유게시판</a>\r\n");
      out.write("			<a href=\"/recommend?audiacc=10000000\">영화 추천</a>\r\n");
      out.write("			<a href=\"/dailyMovie\">상영작 통계 조회</a> \r\n");
      out.write("			<a href=\"/HowMuchDailyMovie\">개봉작 통계 조회</a>\r\n");
      out.write("			<a href=\"/SearchMovie\">영화 찾기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"movieBox\">\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<!-- <h1>Movie Detail</h1> -->\r\n");
      out.write("			");

			// 전달받은 number 파라미터 값 추출
			int number = Integer.parseInt(request.getParameter("number"));

			// TODO: number를 사용하여 필요한 데이터를 조회 및 출력하는 로직 작성
			// MySQL 데이터베이스 연결 및 쿼리 실행 등 필요한 작업을 수행하세요.
			
      out.write("\r\n");
      out.write("			");

			// JSON 파일 읽기
			String apiUrl = "http://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieInfo.json?key=f5eef3421c602c6cb7ea224104795888&movieCd="
					+ number;
			URL url = new URL(apiUrl);
			HttpURLConnection connection = (HttpURLConnection) url.openConnection();
			connection.setRequestMethod("GET");

			// JSON 파싱
			ObjectMapper objectMapper = new ObjectMapper();
			Map<String, Object> jsonData = objectMapper.readValue(connection.getInputStream(), Map.class);
			Map<String, Object> movieInfoResult = (Map<String, Object>) jsonData.get("movieInfoResult");
			Map<String, Object> movieInfo = (Map<String, Object>) movieInfoResult.get("movieInfo");

			String movieNm = (String) movieInfo.get("movieNm");
			String movieNmEn = (String) movieInfo.get("movieNmEn");
			String showTm = (String) movieInfo.get("showTm");
			String prdtYear = (String) movieInfo.get("prdtYear");
			String openDt = (String) movieInfo.get("openDt");

			List<Map<String, String>> genres = (List<Map<String, String>>) movieInfo.get("genres");
			List<Map<String, String>> directors = (List<Map<String, String>>) movieInfo.get("directors");
			List<Map<String, String>> actors = (List<Map<String, String>>) movieInfo.get("actors");
			List<Map<String, String>> showTypes = (List<Map<String, String>>) movieInfo.get("showTypes");
			List<Map<String, String>> companys = (List<Map<String, String>>) movieInfo.get("companys");
			List<Map<String, String>> audits = (List<Map<String, String>>) movieInfo.get("audits");
			List<Map<String, String>> staffs = (List<Map<String, String>>) movieInfo.get("staffs");

			// 영화 포스터 이미지 출력
			out.println("<img id='posterImage' src='' alt='포스터 없음' width='500'>");

			// 영화 검색 함수 호출
			out.println("<script>searchMovie('" + movieNm + "');</script>");
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<h2>");
      out.print(movieNm);
      out.write("\r\n");
      out.write("				(");
      out.print(prdtYear);
      out.write(")\r\n");
      out.write("			</h2>\r\n");
      out.write("			<div class=\"buttons-container\">\r\n");
      out.write("				<button id=\"movie-info-btn\" onclick=\"toggleSection(this, 'movie-info')\">영화 정보</button>\r\n");
      out.write("				<button onclick=\"toggleSection(this, 'actors')\">감독/출연</button>\r\n");
      out.write("				<button onclick=\"toggleSection(this, 'companys')\">제작/배급사</button>\r\n");
      out.write("				<button onclick=\"toggleSection(this, 'staffs')\">스텝</button>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div id=\"movie-info\" class=\"movie-section\">\r\n");
      out.write("				<p>\r\n");
      out.write("					영문 제목:\r\n");
      out.write("					");
      out.print(movieNmEn);
      out.write("</p>\r\n");
      out.write("				<p>\r\n");
      out.write("					상영 시간:\r\n");
      out.write("					");
      out.print(showTm);
      out.write("분\r\n");
      out.write("				</p>\r\n");
      out.write("				<p>\r\n");
      out.write("					개봉일:\r\n");
      out.write("					");
      out.print(openDt);
      out.write("</p>\r\n");
      out.write("				<h3>장르</h3>\r\n");
      out.write("				<ul>\r\n");
      out.write("					");

					for (Map<String, String> genre : genres) {
					
      out.write("\r\n");
      out.write("					<li>");
      out.print(genre.get("genreNm"));
      out.write("</li>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("				<h3>상영 형식</h3>\r\n");
      out.write("				<ul>\r\n");
      out.write("					");

					for (Map<String, String> showType : showTypes) {
					
      out.write("\r\n");
      out.write("					<li>");
      out.print(showType.get("showTypeGroupNm"));
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print(showType.get("showTypeNm"));
      out.write("</li>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("				<h3>등급</h3>\r\n");
      out.write("				<ul>\r\n");
      out.write("					");

					for (Map<String, String> audit : audits) {
					
      out.write("\r\n");
      out.write("					<li>");
      out.print(audit.get("watchGradeNm"));
      out.write(" (심의번호: ");
      out.print(audit.get("auditNo"));
      out.write(")</li>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div id=\"actors\" class=\"movie-section hidden\">\r\n");
      out.write("				<h3>감독</h3>\r\n");
      out.write("				<ul>\r\n");
      out.write("					");

					for (Map<String, String> director : directors) {
					
      out.write("\r\n");
      out.write("					<li>");
      out.print(director.get("peopleNm"));
      out.write(' ');
      out.write('(');
      out.print(director.get("peopleNmEn"));
      out.write(")</li>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("\r\n");
      out.write("				<h3>출연</h3>\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>이름</th>\r\n");
      out.write("						<th>영문명</th>\r\n");
      out.write("						<th>작중역할</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						");

						for (Map<String, String> actor : actors) {
						
      out.write("\r\n");
      out.write("						<td>");
      out.print(actor.get("peopleNm"));
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(actor.get("peopleNmEn") != null ? actor.get("peopleNmEn") : "");
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(actor.get("cast"));
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div id=\"companys\" class=\"movie-section hidden\">\r\n");
      out.write("				<h3>제작/배급사</h3>\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>제작/배급사</th>\r\n");
      out.write("						<th>영문명</th>\r\n");
      out.write("						<th>분야</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						");

						for (Map<String, String> company : companys) {
						
      out.write("\r\n");
      out.write("						<td>");
      out.print(company.get("companyNm"));
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(company.get("companyNmEn") != null ? company.get("companyNmEn") : "");
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(company.get("companyPartNm"));
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div id=\"staffs\" class=\"movie-section hidden\">\r\n");
      out.write("				<h3>스텝</h3>\r\n");
      out.write("				<ul>\r\n");
      out.write("					");

					for (Map<String, String> staff : staffs) {
					
      out.write("\r\n");
      out.write("					<li>");
      out.print(staff.get("staffRoleNm"));
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print(staff.get("peopleNm"));
      out.write(' ');
      out.write('(');
      out.print(staff.get("peopleNmEn"));
      out.write(")</li>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("	<div id=\"footer_sns\">\r\n");
      out.write("		<!-- ul>li.icon.s$*5>a[#]>span -->\r\n");
      out.write("		<br>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<a href=\"https://github.com/909ma/Project-Web\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>GitHub</title>\r\n");
      out.write("				<path fill=\"#181717\" d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" /></svg></a>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("  <title>Instagram</title>\r\n");
      out.write("  <path fill=\"#E4405F\"\r\n");
      out.write("						d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"\r\n");
      out.write("					/>\r\n");
      out.write("</svg></a>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>Facebook</title>\r\n");
      out.write("<path fill=\"#1877F2\" d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" /></svg></a>\r\n");
      out.write("			</li>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>Google Play</title>\r\n");
      out.write("<path fill=\"#414141\" d=\"M22.018 13.298l-3.919 2.218-3.515-3.493 3.543-3.521 3.891 2.202a1.49 1.49 0 0 1 0 2.594zM1.337.924a1.486 1.486 0 0 0-.112.568v21.017c0 .217.045.419.124.6l11.155-11.087L1.337.924zm12.207 10.065l3.258-3.238L3.45.195a1.466 1.466 0 0 0-.946-.179l11.04 10.973zm0 2.067l-11 10.933c.298.036.612-.016.906-.183l13.324-7.54-3.23-3.21z\" /></svg></a>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>App Store</title>\r\n");
      out.write("				<path fill=\"#0D96F6\"\r\n");
      out.write("						d=\"M8.8086 14.9194l6.1107-11.0368c.0837-.1513.1682-.302.2437-.4584.0685-.142.1267-.2854.1646-.4403.0803-.3259.0588-.6656-.066-.9767-.1238-.3095-.3417-.5678-.6201-.7355a1.4175 1.4175 0 0 0-.921-.1924c-.3207.043-.6135.1935-.8443.4288-.1094.1118-.1996.2361-.2832.369-.092.1463-.175.2979-.259.4492l-.3864.6979-.3865-.6979c-.0837-.1515-.1667-.303-.2587-.4492-.0837-.1329-.1739-.2572-.2835-.369-.2305-.2353-.5233-.3857-.844-.429a1.4181 1.4181 0 0 0-.921.1926c-.2784.1677-.4964.426-.6203.7355-.1246.311-.1461.6508-.066.9767.038.155.0962.2984.1648.4403.0753.1564.1598.307.2437.4584l1.248 2.2543-4.8625 8.7825H2.0295c-.1676 0-.3351-.0007-.5026.0092-.1522.009-.3004.0284-.448.0714-.3108.0906-.5822.2798-.7783.548-.195.2665-.3006.5929-.3006.9279 0 .3352.1057.6612.3006.9277.196.2683.4675.4575.7782.548.1477.043.296.0623.4481.0715.1675.01.335.009.5026.009h13.0974c.0171-.0357.059-.1294.1-.2697.415-1.4151-.6156-2.843-2.0347-2.843zM3.113 18.5418l-.7922 1.5008c-.0818.1553-.1644.31-.2384.4705-.067.1458-.124.293-.1611.452-.0785.3346-.0576.6834.0645 1.0029.1212.3175.3346.583.607.7549.2727.172.5891.2416.9013.1975.3139-.044.6005-.1986.8263-.4402.1072-.1148.1954-.2424.2772-.3787.0902-.1503.1714-.3059.2535-.4612L6 19.4636c-.0896-.149-.9473-1.4704-2.887-.9218m20.5861-3.0056a1.4707 1.4707 0 0 0-.779-.5407c-.1476-.0425-.2961-.0616-.4483-.0705-.1678-.0099-.3352-.0091-.503-.0091H18.648l-4.3891-7.817c-.6655.7005-.9632 1.485-1.0773 2.1976-.1655 1.0333.0367 2.0934.546 3.0004l5.2741 9.3933c.084.1494.167.299.2591.4435.0837.131.1739.2537.2836.364.231.2323.5238.3809.8449.4232.3192.0424.643-.0244.9217-.1899.2784-.1653.4968-.4204.621-.7257.1246-.3072.146-.6425.0658-.9641-.0381-.1529-.0962-.2945-.165-.4346-.0753-.1543-.1598-.303-.2438-.4524l-1.216-2.1662h1.596c.1677 0 .3351.0009.5029-.009.1522-.009.3007-.028.4483-.0705a1.4707 1.4707 0 0 0 .779-.5407A1.5386 1.5386 0 0 0 24 16.452a1.539 1.539 0 0 0-.3009-.9158Z\"\r\n");
      out.write("					/></svg></a>\r\n");
      out.write("\r\n");
      out.write("		</ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"tel\">\r\n");
      out.write("			<a href=\"#\">ARS <em>1544-7755</em></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"footer_info\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"footer_info\">\r\n");
      out.write("					<h2>\r\n");
      out.write("						<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/main_logo(black stic).png\" alt=\"vie\">\r\n");
      out.write("					</h2>\r\n");
      out.write("					<!--  ul>li*7>a[#] -->\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li><a href=\"#\">회사소개</a></li>\r\n");
      out.write("						<li><a href=\"#\">채용정보</a></li>\r\n");
      out.write("						<li><a href=\"#\">제휴/광고 문의</a></li>\r\n");
      out.write("						<li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("						<li><a href=\"#\">개인정보처리방침</a></li>\r\n");
      out.write("						<li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("						<li><a href=\"#\">윤리경영</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("					<address>\r\n");
      out.write("						<p>41228 대구광역시 동구 동부로 121 3층 305호(신천동, 경북산업직업전문학교)</p>\r\n");
      out.write("						<p>copyright © 2023 대구국비지원 무료교육센터 전국최초 베스트훈련기관 선정 경북산업직업전문학교. All Rights Reserved.</p>\r\n");
      out.write("					</address>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<p>© 2023 아 오늘 영화 뭐 보지?. All rights reserved.</p>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
