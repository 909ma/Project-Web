/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-23 00:35:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;

public final class dailyMovie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/movie/../logoutBar.jsp", Long.valueOf(1687322300036L));
    _jspx_dependants.put("/WEB-INF/views/movie/../header.jsp", Long.valueOf(1686797322589L));
    _jspx_dependants.put("/WEB-INF/views/movie/../footer.jsp", Long.valueOf(1687325975804L));
    _jspx_dependants.put("/WEB-INF/views/movie/../navi.jsp", Long.valueOf(1687321082701L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>상영작 통계 조회</title>\r\n");
      out.write("<script src=\"https://d3js.org/d3.v7.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("/* 테이블 스타일링 */\r\n");
      out.write("table {\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("	padding: 8px;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	border-bottom: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr:nth-child(even) {\r\n");
      out.write("	background-color: #f2f2f2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 차트 스타일링 */\r\n");
      out.write(".arc {\r\n");
      out.write("	fill-opacity: 0.8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".arc:hover {\r\n");
      out.write("	fill-opacity: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chart {\r\n");
      out.write("	max-width: 500px;\r\n");
      out.write("	height: 300px;\r\n");
      out.write("	margin: 30px auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#dataBox {\r\n");
      out.write("	max-width: 1024px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".data-row.highlighted {\r\n");
      out.write("	background-color: yellow;\r\n");
      out.write("}\r\n");
      out.write("h4{\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/commonStyles.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/naviStyles.css\">\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/favicon.ico\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	#logout-bar {\r\n");
      out.write("	    position: fixed;\r\n");
      out.write("	    top: 0;\r\n");
      out.write("	    left: 0;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    height: 30px;\r\n");
      out.write("	    background-color: #222222; /* 예시로 파란색 사용, 원하는 색상으로 변경해주세요 */\r\n");
      out.write("	    color: #ffffff; /* 텍스트 색상을 흰색으로 지정, 원하는 색상으로 변경해주세요 */\r\n");
      out.write("	    font-size: 12px; /* 텍스트 크기 조정, 원하는 크기로 변경해주세요 */\r\n");
      out.write("	    font-weight: bold; /* 텍스트 굵기 조정, 원하는 굵기로 변경해주세요 */\r\n");
      out.write("	    padding: 5px; /* 위 아래 여백을 조정, 원하는 여백으로 변경해주세요 */\r\n");
      out.write("	    box-sizing: border-box;\r\n");
      out.write("	}\r\n");
      out.write("	</style>\r\n");
      out.write("<!-- 로그인 바의 일부 -->\r\n");
      out.write("<div id=\"logout-bar\">\r\n");
      out.write("	<!-- 로그인 정보 표시 -->\r\n");
      out.write("	<span id=\"username\">사용자명</span>\r\n");
      out.write("	<!-- 로그아웃까지 남은 시간 표시 -->\r\n");
      out.write("	<span id=\"logout-timer\"></span>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 자바스크립트 -->\r\n");
      out.write("<script>\r\n");
      out.write("	// 로그아웃 시간(밀리초)\r\n");
      out.write("	var logoutTime = new Date().getTime() + 20 * 60 * 1000;\r\n");
      out.write("\r\n");
      out.write("	// 매 초마다 시간 갱신\r\n");
      out.write("	var timer = setInterval(function() {\r\n");
      out.write("		// 현재 시간\r\n");
      out.write("		var now = new Date().getTime();\r\n");
      out.write("\r\n");
      out.write("		// 남은 시간 계산\r\n");
      out.write("		var distance = logoutTime - now;\r\n");
      out.write("\r\n");
      out.write("		// 분과 초 계산\r\n");
      out.write("		var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n");
      out.write("		var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n");
      out.write("\r\n");
      out.write("		// 로그아웃까지 남은 시간 표시\r\n");
      out.write("		document.getElementById(\"logout-timer\").innerHTML = minutes + \"분 \"\r\n");
      out.write("				+ seconds + \"초\";\r\n");
      out.write("\r\n");
      out.write("		// 시간이 초과되면 로그아웃\r\n");
      out.write("		if (distance < 0) {\r\n");
      out.write("			clearInterval(timer);\r\n");
      out.write("			// 로그아웃 처리\r\n");
      out.write("			window.location.href = \"/logout\";\r\n");
      out.write("		}\r\n");
      out.write("	}, 1000);\r\n");
      out.write("</script>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<div id = \"header\">\r\n");
      out.write("		<img id=\"mainLogo\"\r\n");
      out.write("			src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/main logo.png\"\r\n");
      out.write("			alt=\"main logo\" width=\"너비\" height=\"높이\" />\r\n");
      out.write("	</div>\r\n");
      out.write("</header>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"topnav\">\r\n");
      out.write("			<a href=\"/board\">메인 화면</a>\r\n");
      out.write("			<a href=\"/Announcement\">공지 사항</a> \r\n");
      out.write("			<a href=\"/freeboard\">자유게시판</a>\r\n");
      out.write("			<a href=\"/recommend?audiacc=10000000\">영화 추천</a>\r\n");
      out.write("			<a href=\"/dailyMovie\">상영작 통계 조회</a> \r\n");
      out.write("			<a href=\"/HowMuchDailyMovie\">개봉작 통계 조회</a>\r\n");
      out.write("			<a href=\"/SearchMovie\">영화 찾기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("		<h4>최근 100일 상영작 통계</h4>\r\n");
      out.write("		<div id=\"dataBox\">\r\n");
      out.write("			<label for=\"date-select\">날짜:</label> <input type=\"date\" id=\"date-select\" onchange=\"updateData(); updateTable();\" onload=\"setDefaultDate()\" /> <br>\r\n");
      out.write("\r\n");
      out.write("			<div id=\"chart\"></div>\r\n");
      out.write("			<br>\r\n");
      out.write("			<table id=\"data-table\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>순위</th>\r\n");
      out.write("					<th>당일 관객수</th>\r\n");
      out.write("					<th>영화 제목</th>\r\n");
      out.write("					<th>당일 매출</th>\r\n");
      out.write("					<th>날짜</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				try {
					Class.forName("com.mysql.cj.jdbc.Driver");
					String url = "jdbc:mysql://localhost/myproject";
					String username = "root";
					String password = "1234";
					Connection connection = DriverManager.getConnection(url, username, password);
					Statement statement = connection.createStatement();
					String sql = "SELECT * FROM MovieChart ORDER BY audiCnt DESC";
					ResultSet resultSet = statement.executeQuery(sql);
					int rank = 1;
					while (resultSet.next()) {
						int amount = resultSet.getInt("audiCnt");
						String name = resultSet.getString("movieNm");
						String itemspec = resultSet.getString("salesAmt");
						int year = resultSet.getInt("targetDt");
				
      out.write("\r\n");
      out.write("				<tr class=\"data-row\">\r\n");
      out.write("					<td>");
      out.print(rank);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(String.valueOf(amount));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(name);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(itemspec);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(String.valueOf(year));
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				");

				rank++;
				}
				resultSet.close();
				statement.close();
				connection.close();
				} catch (Exception e) {
				e.printStackTrace();
				}
				
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("	<div id=\"footer_sns\">\r\n");
      out.write("		<!-- ul>li.icon.s$*5>a[#]>span -->\r\n");
      out.write("		<br>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<a href=\"https://github.com/909ma/Project-Web\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>GitHub</title>\r\n");
      out.write("				<path fill=\"#181717\" d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" /></svg></a>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("  <title>Instagram</title>\r\n");
      out.write("  <path fill=\"#E4405F\"\r\n");
      out.write("						d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"\r\n");
      out.write("					/>\r\n");
      out.write("</svg></a>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>Facebook</title>\r\n");
      out.write("<path fill=\"#1877F2\" d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" /></svg></a>\r\n");
      out.write("			</li>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>Google Play</title>\r\n");
      out.write("<path fill=\"#414141\" d=\"M22.018 13.298l-3.919 2.218-3.515-3.493 3.543-3.521 3.891 2.202a1.49 1.49 0 0 1 0 2.594zM1.337.924a1.486 1.486 0 0 0-.112.568v21.017c0 .217.045.419.124.6l11.155-11.087L1.337.924zm12.207 10.065l3.258-3.238L3.45.195a1.466 1.466 0 0 0-.946-.179l11.04 10.973zm0 2.067l-11 10.933c.298.036.612-.016.906-.183l13.324-7.54-3.23-3.21z\" /></svg></a>\r\n");
      out.write("			<a href=\"#\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\">\r\n");
      out.write("					<title>App Store</title>\r\n");
      out.write("				<path fill=\"#0D96F6\"\r\n");
      out.write("						d=\"M8.8086 14.9194l6.1107-11.0368c.0837-.1513.1682-.302.2437-.4584.0685-.142.1267-.2854.1646-.4403.0803-.3259.0588-.6656-.066-.9767-.1238-.3095-.3417-.5678-.6201-.7355a1.4175 1.4175 0 0 0-.921-.1924c-.3207.043-.6135.1935-.8443.4288-.1094.1118-.1996.2361-.2832.369-.092.1463-.175.2979-.259.4492l-.3864.6979-.3865-.6979c-.0837-.1515-.1667-.303-.2587-.4492-.0837-.1329-.1739-.2572-.2835-.369-.2305-.2353-.5233-.3857-.844-.429a1.4181 1.4181 0 0 0-.921.1926c-.2784.1677-.4964.426-.6203.7355-.1246.311-.1461.6508-.066.9767.038.155.0962.2984.1648.4403.0753.1564.1598.307.2437.4584l1.248 2.2543-4.8625 8.7825H2.0295c-.1676 0-.3351-.0007-.5026.0092-.1522.009-.3004.0284-.448.0714-.3108.0906-.5822.2798-.7783.548-.195.2665-.3006.5929-.3006.9279 0 .3352.1057.6612.3006.9277.196.2683.4675.4575.7782.548.1477.043.296.0623.4481.0715.1675.01.335.009.5026.009h13.0974c.0171-.0357.059-.1294.1-.2697.415-1.4151-.6156-2.843-2.0347-2.843zM3.113 18.5418l-.7922 1.5008c-.0818.1553-.1644.31-.2384.4705-.067.1458-.124.293-.1611.452-.0785.3346-.0576.6834.0645 1.0029.1212.3175.3346.583.607.7549.2727.172.5891.2416.9013.1975.3139-.044.6005-.1986.8263-.4402.1072-.1148.1954-.2424.2772-.3787.0902-.1503.1714-.3059.2535-.4612L6 19.4636c-.0896-.149-.9473-1.4704-2.887-.9218m20.5861-3.0056a1.4707 1.4707 0 0 0-.779-.5407c-.1476-.0425-.2961-.0616-.4483-.0705-.1678-.0099-.3352-.0091-.503-.0091H18.648l-4.3891-7.817c-.6655.7005-.9632 1.485-1.0773 2.1976-.1655 1.0333.0367 2.0934.546 3.0004l5.2741 9.3933c.084.1494.167.299.2591.4435.0837.131.1739.2537.2836.364.231.2323.5238.3809.8449.4232.3192.0424.643-.0244.9217-.1899.2784-.1653.4968-.4204.621-.7257.1246-.3072.146-.6425.0658-.9641-.0381-.1529-.0962-.2945-.165-.4346-.0753-.1543-.1598-.303-.2438-.4524l-1.216-2.1662h1.596c.1677 0 .3351.0009.5029-.009.1522-.009.3007-.028.4483-.0705a1.4707 1.4707 0 0 0 .779-.5407A1.5386 1.5386 0 0 0 24 16.452a1.539 1.539 0 0 0-.3009-.9158Z\"\r\n");
      out.write("					/></svg></a>\r\n");
      out.write("\r\n");
      out.write("		</ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"tel\">\r\n");
      out.write("			<a href=\"#\">ARS <em>1544-7755</em></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"footer_info\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"footer_info\">\r\n");
      out.write("					<h2>\r\n");
      out.write("						<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/main_logo(black stic).png\" alt=\"vie\">\r\n");
      out.write("					</h2>\r\n");
      out.write("					<!--  ul>li*7>a[#] -->\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li><a href=\"#\">회사소개</a></li>\r\n");
      out.write("						<li><a href=\"#\">채용정보</a></li>\r\n");
      out.write("						<li><a href=\"#\">제휴/광고 문의</a></li>\r\n");
      out.write("						<li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("						<li><a href=\"#\">개인정보처리방침</a></li>\r\n");
      out.write("						<li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("						<li><a href=\"#\">윤리경영</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("					<address>\r\n");
      out.write("						<p>41228 대구광역시 동구 동부로 121 3층 305호(신천동, 경북산업직업전문학교)</p>\r\n");
      out.write("						<p>copyright © 2023 대구국비지원 무료교육센터 전국최초 베스트훈련기관 선정 경북산업직업전문학교. All Rights Reserved.</p>\r\n");
      out.write("					</address>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<p>© 2023 아 오늘 영화 뭐 보지?. All rights reserved.</p>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    // 초기 데이터 배열\r\n");
      out.write("    var originalData = [\r\n");
      out.write("        ");
try {
	Class.forName("com.mysql.cj.jdbc.Driver");
	String url = "jdbc:mysql://localhost/myproject";
	String username = "root";
	String password = "1234";
	Connection connection = DriverManager.getConnection(url, username, password);
	Statement statement = connection.createStatement();
	String sql = "SELECT * FROM MovieChart ORDER BY audiCnt DESC";
	ResultSet resultSet = statement.executeQuery(sql);
	int rank = 1;
	while (resultSet.next()) {
		int amount = resultSet.getInt("audiCnt");
		String name = resultSet.getString("movieNm");
		String itemspec = resultSet.getString("salesAmt");
		int year = resultSet.getInt("targetDt");
      out.write("\r\n");
      out.write("        {amount: ");
      out.print(amount);
      out.write(", name: '");
      out.print(name);
      out.write("', itemspec: '");
      out.print(itemspec);
      out.write("', year: ");
      out.print(year);
      out.write("},\r\n");
      out.write("        ");
}
resultSet.close();
statement.close();
connection.close();
} catch (Exception e) {
e.printStackTrace();
}
      out.write("\r\n");
      out.write("    ];\r\n");
      out.write("\r\n");
      out.write("    // 도넛 차트 생성을 위한 함수\r\n");
      out.write("    var svg = d3.select(\"#chart\")\r\n");
      out.write("        .append(\"svg\")\r\n");
      out.write("        .attr(\"width\", 500)\r\n");
      out.write("        .attr(\"height\", 300)\r\n");
      out.write("        .append(\"g\")\r\n");
      out.write("        .attr(\"transform\", \"translate(\" + 250 + \",\" + 150 + \")\");\r\n");
      out.write("\r\n");
      out.write("    function createDonutChart(data) {\r\n");
      out.write("         var width = 500;\r\n");
      out.write("      var height = 300;\r\n");
      out.write("      var radius = Math.min(width, height) / 2;\r\n");
      out.write("\r\n");
      out.write("      var color = d3.scaleOrdinal(d3.schemeCategory10);\r\n");
      out.write("\r\n");
      out.write("      var pie = d3.pie()\r\n");
      out.write("        .value(function(d) { return d.amount; })\r\n");
      out.write("        .sort(null);\r\n");
      out.write("\r\n");
      out.write("      var arc = d3.arc()\r\n");
      out.write("        .innerRadius(radius * 0.6)\r\n");
      out.write("        .outerRadius(radius);\r\n");
      out.write("\r\n");
      out.write("      var arcs = svg.selectAll(\"arc\")\r\n");
      out.write("        .data(pie(data))\r\n");
      out.write("        .enter()\r\n");
      out.write("        .append(\"g\")\r\n");
      out.write("        .attr(\"class\", \"arc\");\r\n");
      out.write("\r\n");
      out.write("      arcs.append(\"path\")\r\n");
      out.write("        .attr(\"d\", arc)\r\n");
      out.write("        .attr(\"fill\", function(d, i) { return color(i); })\r\n");
      out.write("        .attr(\"fill-opacity\", 0.8)\r\n");
      out.write("        .attr(\"data-index\", function(d, i) { return i; })\r\n");
      out.write("        .on(\"click\", function(event, d) {\r\n");
      out.write("          var dataIndex = d3.select(this).attr(\"data-index\");\r\n");
      out.write("          highlightTableRow(dataIndex);\r\n");
      out.write("          showMovieTitle(d.data.name);\r\n");
      out.write("          highlightArc(this);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("      arcs.append(\"text\")\r\n");
      out.write("        .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\r\n");
      out.write("        .attr(\"text-anchor\", \"middle\");\r\n");
      out.write("    }\r\n");
      out.write("	  // 클릭한 칸의 색상을 변경하는 함수\r\n");
      out.write("    function highlightArc(element) {\r\n");
      out.write("      svg.selectAll(\".arc path\")\r\n");
      out.write("        .attr(\"fill-opacity\", 0.8)\r\n");
      out.write("        .attr(\"stroke\", \"none\");\r\n");
      out.write("		 d3.select(element)\r\n");
      out.write("        .attr(\"fill-opacity\", 1)\r\n");
      out.write("        .attr(\"stroke\", \"black\")\r\n");
      out.write("        .attr(\"stroke-width\", 2);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 영화 제목을 원형 차트 중앙에 표시하는 함수\r\n");
      out.write("    function showMovieTitle(movieName) {\r\n");
      out.write("      var centerX = 0;\r\n");
      out.write("      var centerY = 0;\r\n");
      out.write("\r\n");
      out.write("      svg.selectAll(\".movie-title\").remove();\r\n");
      out.write("\r\n");
      out.write("      svg.append(\"text\")\r\n");
      out.write("        .attr(\"class\", \"movie-title\")\r\n");
      out.write("        .attr(\"x\", centerX)\r\n");
      out.write("        .attr(\"y\", centerY)\r\n");
      out.write("        .attr(\"text-anchor\", \"middle\")\r\n");
      out.write("        .attr(\"dominant-baseline\", \"middle\")\r\n");
      out.write("        .text(movieName);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 전날 데이터 필터링\r\n");
      out.write("    var currentDate = new Date();\r\n");
      out.write("    currentDate.setDate(currentDate.getDate() - 1);\r\n");
      out.write("    var previousDate = currentDate.toISOString().slice(0, 10);\r\n");
      out.write("\r\n");
      out.write("    var filteredData = originalData.filter(function(d) {\r\n");
      out.write("        return d.year === parseInt(previousDate.replaceAll(\"-\", \"\"));\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 초기 도넛 차트 생성\r\n");
      out.write("    createDonutChart(filteredData);\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    // 어제의 날짜를 가져오는 함수\r\n");
      out.write("    function getYesterdayDate() {\r\n");
      out.write("      var today = new Date();\r\n");
      out.write("      var yesterday = new Date(today);\r\n");
      out.write("      yesterday.setDate(today.getDate() - 1);\r\n");
      out.write("      return yesterday.toISOString().slice(0, 10);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 기본 날짜 설정\r\n");
      out.write("    function setDefaultDate1() {\r\n");
      out.write("      var yesterday = getYesterdayDate();\r\n");
      out.write("      document.getElementById(\"date-select\").value = yesterday;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 기본 날짜 설정\r\n");
      out.write("    function setDefaultDate() {\r\n");
      out.write("        var today = new Date().toISOString().slice(0, 10);\r\n");
      out.write("        document.getElementById(\"date-select\").value = today;\r\n");
      out.write("    }\r\n");
      out.write(" // 데이터 가져오기 함수\r\n");
      out.write("    function fetchData() {\r\n");
      out.write("      var selectedDate = document.getElementById(\"date-select\").value;\r\n");
      out.write("      \r\n");
      out.write("      // AJAX 요청\r\n");
      out.write("      var xhr = new XMLHttpRequest();\r\n");
      out.write("      xhr.onreadystatechange = function() {\r\n");
      out.write("        if (xhr.readyState === 4 && xhr.status === 200) {\r\n");
      out.write("          var responseData = JSON.parse(xhr.responseText);\r\n");
      out.write("          updateTable(responseData); // 테이블 갱신 함수 호출\r\n");
      out.write("        }\r\n");
      out.write("      };\r\n");
      out.write("      \r\n");
      out.write("      // 서버의 Java 코드로 요청 보내기\r\n");
      out.write("      xhr.open(\"GET\", \"getData.jsp?date=\" + selectedDate, true);\r\n");
      out.write("      xhr.send();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write(" // 테이블 갱신 함수\r\n");
      out.write("    function updateTable() {\r\n");
      out.write("      var table = document.getElementById(\"data-table\");\r\n");
      out.write("      table.innerHTML = \"\"; // 기존 테이블 내용 초기화\r\n");
      out.write("\r\n");
      out.write("      var selectedDate = document.getElementById(\"date-select\").value;\r\n");
      out.write("      var filteredData = originalData.filter(function(d) {\r\n");
      out.write("        return d.year === parseInt(selectedDate.replaceAll(\"-\", \"\"));\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      // 테이블 헤더 생성\r\n");
      out.write("      var headerRow = document.createElement(\"tr\");\r\n");
      out.write("      var rankHeader = document.createElement(\"th\");\r\n");
      out.write("      rankHeader.textContent = \"순위\";\r\n");
      out.write("      var amountHeader = document.createElement(\"th\");\r\n");
      out.write("      amountHeader.textContent = \"당일 관객수\";\r\n");
      out.write("      var nameHeader = document.createElement(\"th\");\r\n");
      out.write("      nameHeader.textContent = \"영화 제목\";\r\n");
      out.write("      var itemspecHeader = document.createElement(\"th\");\r\n");
      out.write("      itemspecHeader.textContent = \"당일 매출\";\r\n");
      out.write("      var yearHeader = document.createElement(\"th\");\r\n");
      out.write("      yearHeader.textContent = \"날짜\";\r\n");
      out.write("\r\n");
      out.write("      headerRow.appendChild(rankHeader);\r\n");
      out.write("      headerRow.appendChild(amountHeader);\r\n");
      out.write("      headerRow.appendChild(nameHeader);\r\n");
      out.write("      headerRow.appendChild(itemspecHeader);\r\n");
      out.write("      headerRow.appendChild(yearHeader);\r\n");
      out.write("\r\n");
      out.write("      table.appendChild(headerRow);\r\n");
      out.write("\r\n");
      out.write("   // 데이터를 테이블에 추가\r\n");
      out.write("      for (var i = 0; i < filteredData.length; i++) {\r\n");
      out.write("        var row = document.createElement('tr');\r\n");
      out.write("		 row.className = 'data-row'; // 클래스 이름 추가\r\n");
      out.write("        var rankCell = document.createElement(\"td\");\r\n");
      out.write("        rankCell.textContent = i + 1; // 순위 데이터 추가 (1부터 시작)\r\n");
      out.write("        var amountCell = document.createElement(\"td\");\r\n");
      out.write("        amountCell.textContent = filteredData[i].amount.toLocaleString() + \"명\"; // \"명\"을 추가하여 표시\r\n");
      out.write("        var nameCell = document.createElement(\"td\");\r\n");
      out.write("        nameCell.textContent = filteredData[i].name;\r\n");
      out.write("        var itemspecCell = document.createElement(\"td\");\r\n");
      out.write("        itemspecCell.textContent = parseFloat(filteredData[i].itemspec).toLocaleString() + \"원\"; // 쉼표 포함된 형식으로 변환 후 \"원\"을 추가하여 표시\r\n");
      out.write("        var yearCell = document.createElement(\"td\");\r\n");
      out.write("        yearCell.textContent = String(filteredData[i].year).replace(/(\\d{4})(\\d{2})(\\d{2})/, \"$1-$2-$3\");\r\n");
      out.write("\r\n");
      out.write("        row.appendChild(rankCell);\r\n");
      out.write("        row.appendChild(amountCell);\r\n");
      out.write("        row.appendChild(nameCell);\r\n");
      out.write("        row.appendChild(itemspecCell);\r\n");
      out.write("        row.appendChild(yearCell);\r\n");
      out.write("\r\n");
      out.write("        table.appendChild(row);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("// 클릭한 행을 강조 표시하는 함수\r\n");
      out.write("function highlightRow(row) {\r\n");
      out.write("  var rows = document.getElementsByClassName('data-row');\r\n");
      out.write("  for (var i = 0; i < rows.length; i++) {\r\n");
      out.write("    rows[i].classList.remove('highlighted');\r\n");
      out.write("  }\r\n");
      out.write("  row.classList.add('highlighted');\r\n");
      out.write("}\r\n");
      out.write("function highlightTableRow(index) {\r\n");
      out.write("  var rows = document.getElementsByClassName(\"data-row\");\r\n");
      out.write("  for (var i = 0; i < rows.length; i++) {\r\n");
      out.write("    if (i === parseInt(index)) {\r\n");
      out.write("      rows[i].classList.add(\"highlighted\");\r\n");
      out.write("    } else {\r\n");
      out.write("      rows[i].classList.remove(\"highlighted\");\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var chartSlices = document.querySelectorAll(\".arc path\");\r\n");
      out.write("for (var i = 0; i < chartSlices.length; i++) {\r\n");
      out.write("  chartSlices[i].addEventListener(\"click\", function() {\r\n");
      out.write("    var index = parseInt(this.getAttribute(\"data-index\"));\r\n");
      out.write("    highlightTableRow(index);\r\n");
      out.write("	 row.addEventListener('click', function() {\r\n");
      out.write("    highlightRow(this); // 클릭한 행을 전달하여 highlightRow() 함수 호출\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  table.appendChild(row);\r\n");
      out.write("  });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    // 데이터 필터링 및 차트 업데이트\r\n");
      out.write("    function updateData() {\r\n");
      out.write("        var selectedDate = document.getElementById(\"date-select\").value;\r\n");
      out.write("        var filteredData = originalData.filter(function(d) {\r\n");
      out.write("            return d.year === parseInt(selectedDate.replaceAll(\"-\", \"\"));\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        svg.selectAll(\"*\").remove();\r\n");
      out.write("\r\n");
      out.write("        createDonutChart(filteredData);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 페이지 로드 시 기본 날짜 설정\r\n");
      out.write("    setDefaultDate1();\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
